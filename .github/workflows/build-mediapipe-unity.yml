name: Build MediaPipeUnityPlugin

on: [ workflow_dispatch ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    # - name: Initialize
    #   uses: actions/checkout@v2
    #   with:
    #     submodules: true

    - name: Cache Bazel
      uses: actions/cache@v2
      with:
        path: ~/.cache/bazel
        key: ${{ runner.os }}-${{ hashFiles('WORKSPACE') }}

    - name: Build binary
      # working-directory: unity
      run: |
        pip3 install numpy
        pip3 install argparse
        Invoke-WebRequest https://github.com/opencv/opencv/releases/download/3.4.10/opencv-3.4.10-vc14_vc15.exe -OutFile opencv.exe
        .\opencv.exe -o"C:" -y
        Invoke-WebRequest https://github.com/homuler/MediaPipeUnityPlugin/archive/refs/tags/v0.6.2.zip -OutFile MediaPipeUnityPlugin.zip
        Expand-Archive MediaPipeUnityPlugin.zip MediaPipeUnityPlugin
        cd MediaPipeUnityPlugin/MediaPipeUnityPlugin-0.6.2 && bash -c "PYTHON_BIN_PATH=C:\hostedtoolcache\windows\Python\3.7.9\x64\python.exe python3 build.py build --desktop cpu --include_opencv_libs -v"
    
    # - name: Build binary
    #   working-directory: unity
    #   shell: bash
    #   run: |
    #     cd MediaPipeUnityPlugin/MediaPipeUnityPlugin-0.6.2 && PYTHON_BIN_PATH=C:\msys64\mingw64\bin\python.exe python build.py build --desktop cpu --include_opencv_libs -v
    
    
    - name: The job has succeeded
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: MediaPipeUnityPlugin
        path: MediaPipeUnityPlugin/MediaPipeUnityPlugin-0.6.2

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 30